q()
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("Rtools")
install_github(c("assertthat", "testthat"))
install_github(c("httpuv", "shiny", "ggvis"), "rstudio")
install.packages("KernSmooth")
library(KernSmooth)
swirl()
library(swirl)
install.packages("swirl")
library(swirl)
swirl
swirl()
DT$SEX
library(data.table)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile = "./ex5.csv")
"./ex1.csv"
DT <- data.table(housing)
DT <- 0
DT <- fread("./ex5.csv", sep=",")
DT$SEX
system.time(rowMeans(DT)[DT$SEX==1] ;rowMeans(DT)[DT$SEX==2])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
DT[,mean(pwgtp15),by=SEX]
DT$pwgtp15,by=DT$SEX
mean(DT$pwgtp15,by=DT$SEX)
debug(ls)
ls()
?debug
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?axis()
?lattice
?panel.abline
?points()
?text()
?axis()
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?trellis.par.set()
?splom()
print.trellis()
par()
?par()
?trellis.par.set()
trellis.par.set()
trellis.par.get()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
ggplot(movies, geom="density",aes(votes, rating))
g <- ggplot(movies,aes(votes, rating))
g + geom_point()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
P = (0.75*0.3)/(0.75*0.3 + (1-0.52)*(1-0.3))
P
?rnorm
pnorm(1,0,0.75)
qnorm(0,975,1,0)
pnorm(0,975,1,0)
pnorm(0,975,mean=0,sd=1)
pnorm(0.975,mean=0,sd=1)
pnorm(1,96,mean=0,sd=1)
pnorm(1.96,mean=0,sd=1)
pnorm(p=1.96,mean=0,sd=1)
pnorm(q=1.96,mean=0,sd=1)
pnorm(q=70, mean= 80, sd= 10)
prob <- pnorm(q=70, mean= 80, sd= 10)
print (prob)
perc <- qnorm(p=0.95, mean=1100, sd=75)
prin(perc)
print(perc)
wom <- rnorm(100,mean=1100, sd=75)
perc <- qnorm(p=0.95,mean=1100, sd=7.5)
print(perc)
pbinom(3, size=5, prob=.5, lower.Tail=F)
pbinom(3, size=5, prob=.5, lower.tail=F)
P(B | Ac) = P( B ^ Ac) / P(Ac) = 0.1 /0.2 = 0.12
source('~/.active-rstudio-document', echo=TRUE)
0.1/0.2
pnorm(p=14, mean=15, sd=10/sqrt(100))
pnorm(q=14, mean=15, sd=10/sqrt(100))
pnorm(q=16, mean=15, sd=10/sqrt(100))-pnorm(q=14, mean=15, sd=10/sqrt(100))
ppois(10, lambda = 5 * 3)
choose(9,3)
?choose
choose(3,9)
pnorm(q=1.96,mean=0,sd=1)
prob <- pnorm(q=70, mean= 80, sd= 10)
print (prob)
perc <- qnorm(p=0.95, mean=1100, sd=75)
print(perc)
sd_mean = sd/sqrt(n)
perc <- qnorm(p=0.95,mean=1100, sd=7.5)
print(perc)
pbinom(3, size=5, prob=.5, lower.tail=F)
pnorm(q=16, mean=15, sd=10/sqrt(100))-pnorm(q=14, mean=15, sd=10/sqrt(100))
ppois(10, lambda = 5 * 3)
choose(9,3)
1/12
1/120
1/120
1/12
= sqrt(1/120)
sqrt(1/120)
wd="C:\\Users\\mmorelli\\Google Drive\\Data Science\\05 - Reproducible Research\\01 Peer\\RepData_PeerAssessment1"
setwd(wd)
activ <- read.csv(unzip("./activity.zip"), stringsAsFactors=F)
activ$dateAsDate <- as.Date(activ$date, "%Y-%m-%d")
# set locale and be sure is the right trellis setting
Sys.setlocale("LC_TIME", "English")
# Make a histogram of the total number of steps taken each day
activ.complete <- activ[complete.cases(activ),]
library(plyr)
byday <- ddply(activ.complete, ~dateAsDate, summarise, stepsPerDay=sum(steps))
hist(byday$stepsPerDay)
mean(byday$stepsPerDay)
median(byday$stepsPerDay)
