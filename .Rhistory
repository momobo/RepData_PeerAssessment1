swirl()
DT$SEX
library(data.table)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile = "./ex5.csv")
"./ex1.csv"
DT <- data.table(housing)
DT <- 0
DT <- fread("./ex5.csv", sep=",")
DT$SEX
system.time(rowMeans(DT)[DT$SEX==1] ;rowMeans(DT)[DT$SEX==2])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
DT[,mean(pwgtp15),by=SEX]
DT$pwgtp15,by=DT$SEX
mean(DT$pwgtp15,by=DT$SEX)
debug(ls)
ls()
?debug
install.packages("knitr")
?knitr
```{r scatterplot, fig.height=4}
getwd()
wd="C:\\Users\\mmorelli\\Google Drive\\Data Science\\05 - Reproducible Research\\01 Peer\\RepData_PeerAssessment1"
setwd(wd)
getwd()
activ <- read.csv(unzip("./activity.zip"))
head(activ)
str(activ)
activ <- read.csv(unzip("./activity.zip"), stringsAsFactors=F)
head(activ)
str(activ)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?as.Date
activ$date_date <- as.Date(activ$date, "%Y-%m-%d")
str(activ)
head(activ)
activ
activ
activ[is.na(activ$date_date),]
activ <- read.csv(unzip("./activity.zip"), stringsAsFactors=F)
activ$date <- as.Date(activ$date, "%Y-%m-%d")
activ[is.na(activ$date),]
table(activ$date, activ$steps)
str(activ)
plot(activ$date, activ$steps)
Sys.setlocale("LC_TIME", "English")
plot(activ$date, activ$steps)
plot(activ$date, activ$steps, type="l")
str(activ)
activ_complete = complete.cases(activ)
activ.complete = complete.cases(activ)
rm(activ_complete)
str(activ.complete)
activ.complete = activ[complete.cases(activ), ]
plot(activ$date, activ$steps,)
uniq(activ.complete$date)
unique(activ.complete$date)
length(unique(activ.complete$date))
?as.character
time = format(activ$interval, digits=4)
time
?strfmt
?sprintf
time = sprintf(activ$interval, "%04d")
time = sprintf("%04d", activ$interval)
time
activ <- read.csv(unzip("./activity.zip"), stringsAsFactors=F)
activ$dateAsDate <- as.Date(activ$date, "%Y-%m-%d")
str(activ)
DateTime <- strptime(paste(activ$date, sprintf("%04d", activ$interval)),
"%Y-%m-%d %H%M")
DateTime
activ$DateTime <- strptime(paste(activ$date, sprintf("%04d", activ$interval)),
"%Y-%m-%d %H%M")
activ.complete = activ[complete.cases(activ), ]
activ.complete <- activ[complete.cases(activ), ]
activ <- read.csv(unzip("./activity.zip"), stringsAsFactors=F)
activ$dateAsDate <- as.Date(activ$date, "%Y-%m-%d")
Sys.setlocale("LC_TIME", "English")
activ$DateTime <- strptime(paste(activ$date, sprintf("%04d", activ$interval)),
"%Y-%m-%d %H%M")
activ.complete <- activ[complete.cases(activ), ]
str(activ)
complete.cases(activ)
sapply(activ, length)
rm(activ.complete)
complete.cases(activ)
?complete.cases
complete.cases(activ,)
?na.omit
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA))
na.omit(DF)
activ.complete <- activ[na.omit(activ), ]
na.omit(activ)
activ.complete <- na.omit(activ)
plot(activ$Datetime)
plot(activ.complete$Datetime)
plot(activ.complete$Datetime, activ.complete$steps)
plot(activ.complete$Datetime, activ.complete$steps)
?ts
activ <- read.csv(unzip("./activity.zip"), stringsAsFactors=F)
activ$dateAsDate <- as.Date(activ$date, "%Y-%m-%d")
activ.complete <- na.omit(activ)
library(plyr)
ddply(activ.complete, ~date, sum(steps))
ddply(activ.complete, ~date, summarise, sum=sum(steps))
hist(ddply(activ.complete, ~date, summarise, sum=sum(steps)))
byday <-ddply(activ.complete, ~date, summarise, sum=sum(steps)))
byday <- ddply(activ.complete, ~date, summarise, sum=sum(steps))
byday <- ddply(activ.complete, ~date, summarise, actPerDay=sum(steps))
hist(byday$actPerDay)
byday <- ddply(activ.complete, ~dateAsDate, summarise, actPerDay=sum(steps))
hist(byday$actPerDay)
byday <- ddply(activ.complete, ~dateAsDate, summarise, stepsPerDay=sum(steps))
hist(byday$stepsPerDay)
mean(byday$stepsPerDay)
median(byday$stepsPerDay)
activ <- read.csv(unzip("./activity.zip"), stringsAsFactors=F)
# date to date type
activ$dateAsDate <- as.Date(activ$date, "%Y-%m-%d")
# set locale and be sure is the right trellis setting
Sys.setlocale("LC_TIME", "English")
# Make a histogram of the total number of steps taken each day
activ.complete <- activ[case.complete(activ),]
activ.complete <- activ[complete.case(activ),]
activ.complete <- activ[complete.cases(activ),]
byday <- ddply(activ.complete, ~dateAsDate, summarise, stepsPerDay=sum(steps))
hist(byday$stepsPerDay)
mean(byday$stepsPerDay)
median(byday$stepsPerDay)
byInterv <- ddply(activ, ~interval, summarise, stepsPerInterval=mean(steps))
with(byInterv, plot(interval, stepsPerInterval))
str(byInterv)
byInterv <- ddply(activ, ~interval, summarise, stepsPerInterval=mean(steps), rm.na=T)
with(byInterv, plot(interval, stepsPerInterval))
str(byInterv)
byInterv <- ddply(activ, ~interval, summarise, stepsPerInterval=mean(steps, rm.na=T))
with(byInterv, plot(interval, stepsPerInterval))
str(byInterv)
byInterv <- ddply(activ.complete, ~interval, summarise, stepsPerInterval=mean(steps))
with(byInterv, plot(interval, stepsPerInterval))
source('~/.active-rstudio-document', echo=TRUE)
?sprintf
?strsplit
strsplit("0900","..")
strsplit("0900",".{2}")
strsplit("0900",".{2}", perl=T)
strsplit("0900","[0-9]{2}", perl=T)
strsplit("0900","[0-9]{2}")
?substr
str(byInterv)
with(byInterv, plot(interval, stepsPerInterval))
with(byInterv, plot(interval, stepsPerInterval), type="l")
with(byInterv, plot(interval, stepsPerInterval), type="l")
with(byInterv, plot(interval, stepsPerInterval, type="l"))
byInterv <- ddply(activ.complete, ~interval, summarise, meanStepsInt=mean(steps))
with(byInterv, plot(interval, meanStepsInt, type="l"))
max(byInterv$meanStepsInt)
?which
which(byInterv$meanStepsInt==max(byInterv$meanStepsInt))
byInterv[which(byInterv$meanStepsInt==max(byInterv$meanStepsInt)),]
paste(substr(sprintf("%04d", activ$interval),1,2),substr(sprintf("%04d", activ$interval),1,2), sep=":")
activ$IntFmt = paste(substr(sprintf("%04d", activ$interval),1,2),
substr(sprintf("%04d", activ$interval),3,2),
sep=":")
activ <- read.csv(unzip("./activity.zip"), stringsAsFactors=F)
# date to date type, Format interval
activ$dateAsDate <- as.Date(activ$date, "%Y-%m-%d")
activ$IntFmt = paste(substr(sprintf("%04d", activ$interval),1,2),
substr(sprintf("%04d", activ$interval),3,2),
sep=":")
?sprintf
sprintf("%04d",NA)
activ$Interval
activ$interval
sprintf("%04d", activ$interval
)
substr(sprintf("%04d", activ$interval),1,2)
substr(sprintf("%04d", activ$interval),3,2)
?substr
substr(sprintf("%04d", activ$interval),3,4)
activ$dateAsDate <- as.Date(activ$date, "%Y-%m-%d")
activ$IntFmt = paste(substr(sprintf("%04d", activ$interval),1,2),
substr(sprintf("%04d", activ$interval),3,4),
sep=":")
# set locale and be sure is the right trellis setting
Sys.setlocale("LC_TIME", "English")
# Make a histogram of the total number of steps taken each day
activ.complete <- activ[complete.cases(activ),]
library(plyr)
byday <- ddply(activ.complete, ~dateAsDate, summarise, stepsPerDay=sum(steps))
hist(byday$stepsPerDay)
mean(byday$stepsPerDay)
median(byday$stepsPerDay)
# What is the average daily activity pattern?
# 1.Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
# 2.Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
byInterv <- ddply(activ.complete, ~IntFmt, summarise, meanStepsInt=mean(steps))
with(byInterv, plot(IntFmt, meanStepsInt, type="l"))
byInterv <- ddply(activ.complete, ~IntFmt, summarise, meanStepsInt=mean(steps))
activ.complete <- activ[complete.cases(activ),]
library(plyr)
byday <- ddply(activ.complete, ~dateAsDate, summarise, stepsPerDay=sum(steps))
hist(byday$stepsPerDay)
mean(byday$stepsPerDay)
median(byday$stepsPerDay)
# What is the average daily activity pattern?
# 1.Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
# 2.Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
byInterv <- ddply(activ.complete, ~IntFmt, summarise, meanStepsInt=mean(steps))
with(byInterv, plot(IntFmt, meanStepsInt, type="l"))
byInterv <- ddply(activ.complete, ~interval, summarise, meanStepsInt=mean(steps))
with(byInterv, plot(interval, meanStepsInt, type="l"))
byInterv[which(byInterv$meanStepsInt==max(byInterv$meanStepsInt)),]
byInterv[which(byInterv$meanStepsInt==max(byInterv$meanStepsInt)),]$interval
activ <- read.csv(unzip("./activity.zip"), stringsAsFactors=F)
# date to date type, Format interval
activ$dateAsDate <- as.Date(activ$date, "%Y-%m-%d")
# set locale and be sure is the right trellis setting
Sys.setlocale("LC_TIME", "English")
# Make a histogram of the total number of steps taken each day
activ.complete <- activ[complete.cases(activ),]
library(plyr)
byday <- ddply(activ.complete, ~dateAsDate, summarise, stepsPerDay=sum(steps))
hist(byday$stepsPerDay)
mean(byday$stepsPerDay)
median(byday$stepsPerDay)
# What is the average daily activity pattern?
# 1.Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
# 2.Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
byInterv <- ddply(activ.complete, ~interval, summarise, meanStepsInt=mean(steps))
with(byInterv, plot(interval, meanStepsInt, type="l"))
byInterv[which(byInterv$meanStepsInt==max(byInterv$meanStepsInt)),]$interval
sum(!complete.cases(activ))
byInterv
byInterv[which(byInterv$interval=835),]
byInterv[which(byInterv$interval==835),]
byInterv[which(byInterv$interval==835),]$meanStepsInt
active.fil <- active
activ.fil <- activ
activ.fil[is.na(activ.steps),]
activ.fil[is.na(activ$steps),]
activ.fil[is.na(activ$steps),"steps"]
byInterv[which(byInterv$interval==835),]$meanStepsInt
byInterv[which(byInterv$interval==activ$interval),]$meanStepsInt
activ.fil[is.na(activ$steps),"steps"] <- byInterv[which(byInterv$interval==activ$interval),]$meanStepsInt
activ.fil[is.na(activ$steps),"steps"]
ddply(mtcars, "cyl", each(nrow, ncol))
ddply(mtcars, ~ cyl, each(nrow, ncol))
ddply(mtcars, .(cyl), each(nrow, ncol))
ddply(mtcars, .(log(cyl)), each(nrow, ncol))
ddply(mtcars, .(logcyl = log(cyl)), each(nrow, ncol))
ddply(mtcars, .(vs + am), each(nrow, ncol))
activ.fil[is.na(activ$steps),"steps"] <-
byInterv[which(byInterv$interval==activ.fil[is.na(activ$steps),"interval"]),]$meanStepsInt
str(activ.fil)
which(byInterv$interval==0),]$meanStepsInt
byInterv[which(byInterv$interval==0),]$meanStepsInt
byday.fil <- ddply(activ.fil, ~dateAsDate, summarise, stepsPerDay=sum(steps))
hist(byday.fil$stepsPerDay)
mean(byday.fil$stepsPerDay)
hist(byday.fil$stepsPerDay)
mean(byday.fil$stepsPerDay)
median(byday.fil$stepsPerDay)
sum(!complete.cases(activ.fil))
byInterv[which(byInterv$interval==activ.fil[is.na(activ$steps),"interval"]),]$meanStepsInt
activ.fil[is.na(activ$steps),"interval"]),]$meanStepsInt
sum(!complete.cases(activ.complete))
sum(!complete.cases(activ.fil))
byInterv[which(byInterv$interval==activ.fil[is.na(activ$steps),"interval"]),]
which(byInterv$interval==activ.fil[is.na(activ$steps),"interval"])
sum(!complete.cases(activ.fil))
sum(!complete.cases(byInterv))
byInterv
which(byInterv$interval==activ.fil[is.na(activ$steps),"interval"])
activ.fil[is.na(activ$steps),"interval"]
activ.fil[is.na(activ$steps),"interval"]
which(byInterv$interval==
activ.fil[is.na(activ$steps),"interval"]
)
activ.fil[is.na(activ$steps),])
,]
byInterv[
which(byInterv$interval==
activ.fil[is.na(activ$steps),])
,]
byInterv[which(byInterv$interval==835),]$meanStepsInt
activ.fil <- activ
activ.fil[is.na(activ$steps),]
activ.fil[is.na(activ$steps),"interval"]
byInterv$interval== activ.fil[is.na(activ$steps),"interval"]
activ.fil[is.na(activ$steps),"interval"]
byInterv$interv==activ.fil[is.na(activ$steps),"interval"]
byInterv[ which(byInterv$interval== activ.fil[is.na(activ$steps),"interval"]) ,]
which(byInterv$interval== activ.fil[is.na(activ$steps),"interval"])
byInterv[c(1:3),]
which(byInterv$interval== activ.fil[is.na(activ$steps),"interval"])
str(which(byInterv$interval== activ.fil[is.na(activ$steps),"interval"]))
activ.fil[is.na(activ$steps),"interval"]
which(byInterv$interval==activ.fil[is.na(activ$steps),"interval"])
which(byInterv$interval==activ.fil[,"interval"])
?which
which(ll <- c(TRUE, FALSE, TRUE, NA, FALSE, FALSE, TRUE))
activ.fil[is.na(activ$steps),"interval"]
byInterv[which(byInterv$interval==835),]
byInterv[which(byInterv$interval==835),]
byInterv[which(byInterv$interval==c(5,835)),]
row.names(byInterv) <- byInterv$interv
byInterv
byInterv[2305]
byInterv["2305"]
byInterv["2305",]
"
a <- 2305
byInterv[a,]
""
"
a <- 2305
byInterv[a,]
byInterv <- ddply(activ.complete, ~interval, summarise, meanStepsInt=mean(steps))
with(byInterv, plot(interval, meanStepsInt, type="l"))
# 2.
byInterv[which(byInterv$meanStepsInt==max(byInterv$meanStepsInt)),]$interval
sum(!complete.cases(activ))
byInterv[which(byInterv$interval==835),]$meanStepsInt
activ.fil <- activ
is.na(activ$steps)
is.na(activ$steps)
which(is.na(activ$steps))
activ.fil <- activ
for(i in which(is.na(activ$steps))) {
activ.fil[i, "steps"] <-
byInterv[which(byInterv$interval==activ.fil[i, "interval"]),]$meanStepsInt
}
sum(!complete.cases(activ.fil))
sum(!complete.cases(activ.fil))
activ.fil
head(activ.fil)
activ.fil
activ
activ.fil
activ
byday.fil <- ddply(activ.fil, ~dateAsDate, summarise, stepsPerDay=sum(steps))
hist(byday.fil$stepsPerDay)
mean(byday.fil$stepsPerDay)
median(byday.fil$stepsPerDay)
mean(byday$stepsPerDay)
median(byday$stepsPerDay)
mean(byday.fil$stepsPerDay)
median(byday.fil$stepsPerDay)
activ <- read.csv(unzip("./activity.zip"), stringsAsFactors=F)
# date to date type, Format interval
activ$dateAsDate <- as.Date(activ$date, "%Y-%m-%d")
# set locale and be sure is the right trellis setting
Sys.setlocale("LC_TIME", "English")
# Make a histogram of the total number of steps taken each day
activ.complete <- activ[complete.cases(activ),]
library(plyr)
byday <- ddply(activ.complete, ~dateAsDate, summarise, stepsPerDay=sum(steps))
hist(byday$stepsPerDay)
mean(byday$stepsPerDay)
median(byday$stepsPerDay)
byInterv <- ddply(activ.complete, ~interval, summarise, meanStepsInt=mean(steps))
with(byInterv, plot(interval, meanStepsInt, type="l"))
# 2.
byInterv[which(byInterv$meanStepsInt==max(byInterv$meanStepsInt)),]$interval
# Imputing missing values
# 1. how many?
sum(!complete.cases(activ))
# strategy: use the mean for that 5 minute interval
# es: 8.35
#
byInterv[which(byInterv$interval==835),]$meanStepsInt
activ.fil <- activ
# slow but clear
for(i in which(is.na(activ$steps))) {
activ.fil[i, "steps"] <-
byInterv[which(byInterv$interval==activ.fil[i, "interval"]),]$meanStepsInt
}
sum(!complete.cases(activ.fil))
# Make a histogram of the total number of steps taken each day and Calculate and
# report the mean and median total number of steps taken per day. Do these values
# differ from the estimates from the first part of the assignment? What is the
# impact of imputing missing data on the estimates of the total daily number of steps?
byday.fil <- ddply(activ.fil, ~dateAsDate, summarise, stepsPerDay=sum(steps))
hist(byday.fil$stepsPerDay)
mean(byday.fil$stepsPerDay)
median(byday.fil$stepsPerDay)
hist(byday$stepsPerDay)
byday
byday.fil
str(byday)
with(byday, plot(dateAsDate, stepsPerDay)
)
with(byday.fil, plot(dateAsDate, stepsPerDay))
with(byday.fil, plot(dateAsDate, stepsPerDay), type="n")
with(byday, points(dateAsDate, stepsPerDay))
with(byday.fil, points(dateAsDate, stepsPerDay), pch=20)
str(byday)
with(byday.fil, plot(dateAsDate, stepsPerDay), pch=12)
with(byday.fil, points(dateAsDate, stepsPerDay), pch=20)
with(byday.fil, plot(dateAsDate, stepsPerDay), pch=12)
with(byday.fil, plot(dateAsDate, stepsPerDay, pch=12))
with(byday.fil, plot(dateAsDate, stepsPerDay, pch=1))
with(byday.fil, points(dateAsDate, stepsPerDay), pch=20)
with(byday.fil, plot(dateAsDate, stepsPerDay, pch=20))
with(byday,     points(dateAsDate, stepsPerDay))
with(byday.fil, plot(dateAsDate, stepsPerDay, pch=19))
with(byday.fil, plot(dateAsDate, stepsPerDay, pch=19))
with(byday,     points(dateAsDate, stepsPerDay, pch=21))
with(byday.fil, plot(dateAsDate, stepsPerDay, pch=19))
with(byday,     points(dateAsDate, stepsPerDay, pch=21))
with(byday.fil, plot(dateAsDate, stepsPerDay, pch=3))
with(byday,     points(dateAsDate, stepsPerDay, pch=1))
with(byday.fil, plot(dateAsDate, stepsPerDay, pch=20, col="red"))
with(byday,     points(dateAsDate, stepsPerDay, pch=20))
weekdays(byday.fil$dateAsDate)
?weekdays
weekdays(byday.fil$dateAsDate, abbreviate)
weekdays(byday.fil$dateAsDate, abbreviate=T)
weekdays(byday.fil$dateAsDate, abbreviate=T) %in% c("Sun","Sat")
byday[weekdays(byday.fil$dateAsDate, abbreviate=T) %in% c("Sun","Sat"),]
byday$wday <- "weekday"
byday.fil$wday <- "weekday"
byday.fil[weekdays(byday.fil$dateAsDate, abbreviate=T) %in% c("Sun","Sat"), "wday"] <- "weekend"
byday.fil
library(lattice)
activ.fil$wday <- "weekday"
activ.fil[weekdays(activ.fil$dateAsDate, abbreviate=T) %in% c("Sun","Sat"), "wday"] <- "weekend"
byInterv.fil <- ddply(activ.fil, ~interval, summarise, meanStepsInt=mean(steps))
with(byInterv.fil, plot(interval.fil, meanStepsInt, type="l"))
with(byInterv.fil, plot(interval, meanStepsInt, type="l"))
byInterv.fil <- ddply(activ.fil, ~(interval+wday), summarise, meanStepsInt=mean(steps))
byInterv.fil <- ddply(activ.fil, ~ interval, summarise, meanStepsInt=mean(steps))
str(byInterv.fil)
byInterv.fil <- ddply(activ.fil, ~ interval + wday, summarise, meanStepsInt=mean(steps))
str(byInterv.fil)
xyplot(meanStepsInt ~ interval | wday, data=byInterv.fil)
xyplot(meanStepsInt ~ interval | wday, data=byInterv.fil, layout = c(1,2))
xyplot
?xyplot
xyplot(meanStepsInt ~ interval | wday, data=byInterv.fil, layout = c(1,2), type="l")
xlab="Performance (horse power)",
ylab="Fuel economy (miles per gallon)"
xyplot(meanStepsInt ~ interval | wday, data=byInterv.fil, layout = c(1,2), type="l",
xlab="Performance (horse power)",
ylab="Fuel economy (miles per gallon)"
)
xyplot(meanStepsInt ~ interval | wday, data=byInterv.fil, layout = c(1,2), type="l",
xlab="Number of steps",
ylab="Interval")
xyplot(meanStepsInt ~ interval | wday, data=byInterv.fil, layout = c(1,2), type="l",
ylab="Number of steps",
xlab="Interval")
qunif(0.7)
x <- rbin(100)
x <- rbinom(100)
?rbinom
x <- rbinom(100,100)
x <- rbinom(100,0,0.5)
x
x <- rbinom(100,0.5)
x <- rnorm(1000, 5, 10)
mean(x)
x <- rnorm(1000, 5, 10)
mean(x)
x <- rnorm(10000, 5, 10)
mean(x)
x <- rnorm(100000, 5, 10)
mean(x)
sd(x)
mean(x-5)
sd(x-5)
mean((x-5)/10)
sd((x-5)/10)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
sum(x)
x
?rbind
temp
rownames(temp) <- c("X", "Prob")
temp
mean(x)
s=0
for(i=1:4){s<- s +x$X*x$Prob}
for(i,1:4){s<- s +x$X*x$Prob;s}
?for
""
for(i in 1:4){s<- s +x$X*x$Prob;s}
x
for(i in 1:4){s <- s +temp$X*temp$Prob;s}
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
temp[x]
temp["X"]
temp[1,]
temp[1,2]
x <- rnorm(100000, 5, 10)
mean(x)
sd(x)
mean(x-5)
sd((x-5)/10)
mean((x-5)/10)
xyplot(meanStepsInt ~ interval | wday, data=byInterv.fil, layout = c(1,2), type="l",
ylab="Number of steps",
xlab="Interval")
